第15章 布局
目标：
	控制元素位置
	创建网站布局
	针对不同大小的屏幕进行设计
15.1、核心概念
CSS采用盒子模型来处理每个HTML元素。盒子可以是一个“块级”盒子，也可以是一个“内联”盒子。
如果一个块级元素位于另一个元素内部，那么这个外部的框就称为包含元素或父级元素。
15.2、控制元素的位置
CSS中包含以下三种用于控制页面布局的定位机制：普通流、相对定位和绝对定位。在CSS中通过position属性表明定位机制。还可以使用float属性来让元素浮动。
任何元素从普通流脱离时，盒子都会产生重叠。你可以使用z-index属性来控制将哪个盒子显示在上层。
15.3、普通流
默认的，不用写：position:static;
15.4、相对定位
p.example{
	position: relative;
	top:10px;
	left: 100px;
}
相对于其正常的位置的定位，可以设置成百分比。
15.5、绝对定位
如果将一个盒子设置为absolute，那么它就会脱离普通流，不再影响页面中其他元素的位置（如同它不在那个位置一样）。
h1{
	position:absolute;
	top:0px;
	left:500px;
	width:250px;
	margin:0px;
}
相对于其包含元素的定位，可以设置成百分比。
15.6、固定定位
固定定位是绝对定位的一种类型，将一个盒子设置为fixed。
相对于浏览器窗口的定位，可以设置成百分比。
15.7、重叠元素
z-index：当你使用相对定位、固定定位或者绝对定位时，盒子可以重叠的，如果盒子出现重叠，那么在HTML代码中，后出现的元素将位于页面上先出现的元素上层。如果要控制层次，可以使用z-index属性，该值越大，元素的层次越靠前。其有时也被称为堆叠上下文。
15.8、浮动元素
float属性允许你将普通流中的元素在它的包含元素内尽可能的向左或向右排列。位于包含元素中的其他内容会在浮动元素的周围流动。
此时应该使用width属性来指定浮动元素的宽度，否则其可能平铺屏幕也可能会只占据一点空间。
15.9、浮动元素并排
可以使用float属性指定所有的p元素，这样就可以实现并排效果。
15.10、清除浮动
clear属性用于表明一个盒子的左侧或者右侧不允许浮动元素（在同一个元素内）。该属性有如下备选值：
	left：盒子的左侧不能接触同一个包含元素内的其他任何元素；
	right：同上，方向是右；
	both：同上，方向是左、右都不能；
	none：盒子的两侧都可以接触元素。
15.11、float父级元素问题
当一个元素内都是浮动元素时，浏览器认为其高度是0，参考：floatproblem.html。
可以有两种方案解决，一种是新加一个盒子元素；另一个是设置父级元素的overflow为auto并width为100%。
详见：floatsolution.html和floatsolution2.html。
15.12、布局
因为屏幕大小和屏幕分辨率的不同，可以指定固定宽度布局和流体布局。
固定布局参考：fixedwithlayout.html，流体布局参考：liquidlayout.html。
15.13、布局网格
任何视觉艺术的构成（例如设计、绘制或摄影）都是对视觉元素的布置或整理——如何在页面上组织元素，许多设计人员用网格结构来安置各个项目，这同样适用于网页设计人员。有一套网格称为：960像素网格。
比如
10px 			940px 			  10px
10px 460px  	20px   460px	  10px
10px 300px	20px 300px 20px 300px 10px
...
依次向下划分为：220px、140px等。

或者一开始是：
10px 300px 20px 620px 10px
10px 220px 20px 700px 10px
...
15.14、CSS框架
有些别人写好的框架，可以直接使用。
比如：960网格体系：www.960.gs。此外还有如下网站可供参考：
	blueprintcss.org
	lessframework.com
	developer.yahoo.com/yui/grids
15.15、多个样式表
可以在css中使用@import来引入更多css文件，也可以使用多个link标签。
示例很有意思：example.zip。